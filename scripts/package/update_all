#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##? Update all packages
#?? 1.0.0
##?
##? Usage:
##?    update_all

docs::eval_help "$@"

echo 'üçé Updating App Store apps'
mas upgrade

echo ''
echo 'üç∫ Updating Brew apps'
brew update >/dev/null
brew outdated | xargs -n1 brew upgrade

echo ''
echo 'üçª Updating Brew Cask apps'
OUTDATED_CASKS=$(brew cask outdated)

if [ -n "$OUTDATED_CASKS" ]; then
  echo "$OUTDATED_CASKS" | grep -v real-vnc | xargs -n1 brew cask install --force
  echo '‚úÖ  Casks updated'
else
  echo '‚úÖ  Casks already up-to-date'
fi

echo ''
echo 'üßπ Cleaning up Brew'
brew cleanup

echo ''
echo '‚ö°Ô∏è ZSH Zim'
zsh ${ZIM_HOME}/zimfw.zsh upgrade
zsh ${ZIM_HOME}/zimfw.zsh update
zsh ${ZIM_HOME}/zimfw.zsh uninstall & zsh ${ZIM_HOME}/zimfw.zsh install

echo ''
echo 'üìú tldr'
tldr --update

# @todo Create a `sync` command for sync the dotfiles
#echo ''
#echo '‚ô¢ Update dotfiles'
#cd ${DOTFILES_PATH}
#git pull --rebase --autostash
#brew bundle install --file=${HOMEBREW_BUNDLE_FILE_PATH}
#brew bundle dump --file=${HOMEBREW_BUNDLE_FILE_PATH} --force
#brew bundle cleanup --file=${HOMEBREW_BUNDLE_FILE_PATH} --force

if [ "${1-none}" == "--all" ]; then
  echo ''
  echo 'üêò Updating Composer (PHP)'
  composer global update

  echo ''
  echo 'üêç Updating Pip (Python)'
  pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U

  echo ''
  echo '‚ô¶Ô∏è  Updating gem (Ruby)'
  gem update

  echo ''
  echo 'üåà Updating npm (JS)'
  npm install -g npm
  npm update -g
fi

echo ''
echo '‚ôªÔ∏è  Restarting some apps'
killall Rocket
open /Applications/Rocket.app
